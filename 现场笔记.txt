
			
		/* ??´ıÑéÖ¤ */	
	// 	react ±¾ÉíÈÚÈë JSµÄAPI£¬±ÈÈçXMLHttpRequest,navigator.geolocationµÈ
	var React = require('react-native');
	var { Text } = React;
		*Ö¸¶¨ÁËÈı¸ö¶ÔÏó
	var GeoInfo = React.createClass({
		getInitialState: function() {
		return { position: 'unknown' };
	},	
	
	componentDidMount: function() {
		navigator.geolocation.getCurrentPosition(
			(position) => this.setState({position}),
			(error) => console.error(error)
		);
	},
	
	render: function() {
	   return (
		  <Text>
			Position: {JSON.stringify(this.state.position)}
		  </Text>
		);
	   },
	});
	
	
	
	// react¿ÉÒÔÖØÓÃÔ­ÉúUI£¬·½·¨ÊÇÔÚRCTViewManagerµÄ×ÓÀàÀïÊµÏÖ-(UIView *)view¡£ĞèÒªµ÷ÓÃÊ±ÓÃRCT_EXPORT_VIEW_PROPERTY±©Â¶¡£
	/* ÑĞ¾¿ÖØµã */
	//  OC´úÂë
	#import "RCTViewManager.h"
	@interface MyCustomViewManager : RCTViewManager
	@end
	// µ÷ÓÃ´Ëview
	@implementation MyCustomViewManager
		- (UIView *)view
		{
			return [[MyCustomView alloc] init];
		}
		// ÏòJS±©Â¶ÊôĞÔ
		RCT_EXPORT_VIEW_PROPERTY(myCustomProperty);
	@end	
	
	// JS´úÂë
	// Éú³ÉÒ»¸öÄ£ĞÍ
	module.exports = createReactIOSNativeComponentClass({
		validAttributes: { myCustomProperty: true },
		uiViewClassName: 'MyCustomView',
	});

	
	ÔÚJSÀï,nav±»×ö³ÉÒ»¸öÈİÆ÷,¿ØÖÆÒ³ÃæµÄÑ¹Õ»ºÍµ¯³ö.µ¼º½ÌõµÄÑùÊ½ĞèÒª×ÔĞĞ´´½¨
		¶ÔnavigatorÀ´
			Ğ´¶¨ÒåµÄµØ·½,navigator¿Ø¼şÔÚ
				initialRoute·½·¨Àï,´æÁËµ±Ç°»î¶¯Ò³ÃæµÄRouteĞÅÏ¢,°üÀ¨nameºÍcomponent
				
				ÔÚrenderScene»Øµ÷Àï,
					renderScene={(route,navigatr)=>{¡­¡­¡­¡­¡­¡­}}ÀïµÄroute¾Í°üº¬ÕâÁ½¸öÖµ,¶ønavigator¾ÍÊÇµ¼º½À¸¶ÔÏó
				ÒªäÖÈ¾Ò³ÃæÊ±,ÓÃrouteÀïµÄ²ÎÊı,²¢½«navigatorÒ²´«¸øĞÂäÖÈ¾µÄÒ³Ãæ	
				
					let Component = route.component;
					<Component {...route.params} navigator={navigator} />
		
					
			ÔÚµ÷ÓÃÊ±,´ÓpropsÀï»ñÈ¡navigator,ÓÃ´ËnavÀ´push
				const {navigator} = this.props;
				if(navigator){
					navigator.push(
						name:'secondComponent',
						component:SecondComponent,
					)
				}
<<<<<<< HEAD
				
			ĞèÒªµã»÷¶¯×÷Ê±,ÓÃtouch×é¼ş°üº¬Ğè±»µ÷ÓÃµÄ
				<TouchableOpacity>
					<Text>µãÎÒÌø×ª</Text>
				</TouchableOpacity>
				
		#½Å±¾ÖªÊ¶#
				ÒÔnpmÎªÀı
					-XX ÊÇ²ÎÊı,ĞŞÊÎ°²×°Ê±µÄĞĞÎª
					ÀıÈç sudo npm install npm -g Õâ-g ±íÊ¾È«¾Ö°²×°
				
				È«¾Ö°²×°µÄÌØµãÊÇ:
					1 °üÔÚ /usr/localÀï
					2 ÔÚ¹¤³ÌÀï²»ÄÜÍ¨¹ırequireµ÷ÓÃ
					
				²»¼Ó -g¾ÍÊÇ±¾µØ°²×°,°²×°Ê±
					1 °üÔÚnode_modulesÄ¿Â¼ÏÂ
					2 ÔÚ¹¤³ÌÀïÍ¨¹ı require('XXXpackage')À´µ÷ÓÃ
					
		
		#react native#
					ÔÚ±íÊ¾Â·¾¶Ê± ..±íÊ¾ÉÏ¶ş¼¶Â·¾¶
					.±íÊ¾ÉÏÒ»¼¶Â·¾¶
										
					Èç¹û³öÏÖÁËwebSocket Connection fail ,ºÜ¿ÉÄÜÊÇÖ®Ç°±àÒëÊ±´ò¿ªÁËserve´°¿Ú,Ã»ÓĞ¹Øµô.¹Øµô¼´¿É.
					
					Í¼Æ¬´óĞ¡Ò²¿ÉÒÔÓÃstyle={{height:180,width:320}}À´ÉèÖÃ,²¢ÇÒÒªÖ±½Ó·ÅÔÚ<Image />Àï,²»Òª·ÅÔÚStylesÀï
					
					³ß´ç
						inch:³¤¶È  1Ó¢³ß = 2.54cm
						px:ÆÁÄ»ÉÏµÄÏñËØµãÊı,Èç³£¼ûµÄ320 *684
						dp:Ã¿Ó¢³ß°üº¬µÄµãÊı,Èç ÆÁÄ» 320*480 ³ß´ç 2Ó¢³ß*3Ó¢³ß,Ôòdp Îª160
					
					PixelRatio·½·¨
						ÔÚ·Ö±æÂÊ²»Í¬µÄÉè±¸ÉÏ,ÓÃPixelRatioºÃ
						±ÈÈç»ñÈ¡×îÏ¸Ïß¿í
							borderWidth:1/PixelRatio.get()
						
						±ÈÈç¸ù¾İÉè±¸À´¾ö¶¨Í¼Æ¬µÄ·Ö±æÂÊ
							var image = getImage({
								width:PixelRatio.getPixelSizeForLayoutSize(300),
								height:PixelRatio.getPixelSizeForLayoutSize(200),
							});
							¿ÉÔÚ²»Í¬Éè±¸ÉÏÕ¹Ê¾300 * 200µÄÍ¼Æ¬ 
							
					
					LBS(location based service):
					
					
					textAlign Ö»ÄÜ¶ÔÎÄ±¾¿òÓÃ,½«ÆäÎÄ±¾¾ÓÖĞ
					alignItem¶ÔViewÓÃ,ÉèÖÃÄÚ²¿itemµÄÅÅÁĞ
					bottomWidth,bottomColorÖ»ÄÜ¶ÔViewÓÃ
					
					ÒªÄÚ²¿item¾ÓÖĞ,ÔÚcontainerÓÃjustify,alignµÄ¶ÔÆë
					ÒªÎÄ×Ö¾ÓÖĞ,ÔÚTextÀïÓÃtextAlign
					Èç¹û¶à¸ö¶ÔÏóË®Æ½ÅÅÁĞ,ĞèÒªÖĞ¼äµÄ¶ÔÏóstretch,ÔòÉèÖĞ¼ä¶ÔÏóµÄflexÎª1
				
					
					undefined is not an object ÍùÍùËµÃ÷¶ÔÏóÃ»ÓĞ¶¨Òå,ĞèÒª¶¨ÒåÒ»ÏÂ
					±ÈÈç
						<TouchableOpacity onPress = {this._MessageCenter.bind(this)} > 
						ÊÔÍ¼¸ø¶ÔÏó°ó¶¨Ò»¸ö·½·¨,µ«Êµ¼ÊÉÏ²¢Î´¶¨Òå´Ë·½·¨,ËùÒÔ´íÎóÌáÊ¾ undefined object¡­¡­¡­¡­¡­¡­
				
					¹ØÓÚNavigator,»¹ÊÇÓĞĞ©ÒÉÄÑ
						ÒÑÖªĞÅÏ¢´óÖÂÈçÏÂ
							1 ÔÚ¶¨ÒånavigatorÊ±,¾ÍµÃÖ¸¶¨ÆäÊôĞÔºÍ»Øµ÷,Ò»°ãĞÎÊ½Îª
							       <Navigator
							       			// ÊÇnav¶ÔÓ¦µÄµÚÒ»¸ö½çÃæ
									        initialRoute={{ name: defaultName, component: defaultComponent }}
									        // Ìø×ªÑùÊ½
									        configureScene={(route) => {
									        return Navigator.SceneConfigs.FloatFromRight;
									        }}
          
									        // pushÊ±µÄ»Øµ÷
									        renderScene={(route, navigator) => {
									        let Component = route.component;
									        return <Component {...route.params} navigator={navigator} />
									        }
									 } /> 
        
							2 Ò³ÃæÒªimport×Ô¼ºµÄ¶ş¼¶component,ÕâÑù²ÅÄÜÔÚpushÊ±ÕÒµ½				 
				
							ÖØÒª¸ÅÄî:
								Scene:³¡¾° Ò»¸öÈâÑÛÄÜ¿´µ½,Õ¹Ê¾µÄ»­Ãæ
								route:Â·ÓÉ Ã¿¸öscene¶ÔÓ¦µÄË÷Òı,ÓÃÓÚ±êÖ¾,¶¨Î»Ò³Ãæ.ÊÇnavµÄÁé»ê
								
								
		#°æ±¾¹ÜÀí#
				ÖĞ¼äÎÄ¼ş,×îÖÕÉú³ÉÎÄ¼ş¶¼ÒªÌí¼Óµ½ignoreÁĞ±í
				Èı·½¿â×îºÃÒÔ½Å±¾µÄ·½Ê½Ìí¼Ó,ÔÚ±¾µØÖ´ĞĞ
				
			ÔÚES6Àï onPress={this.method1} ÒªĞ´³É  onPress={this.method1.bind(this)}µÄĞÎÊ½ 	

			
		#¹¤¾ß#
			Homebrew ÊÇÓÃÀ´ÔÚ Mac OS X °²×° Linux ¹¤¾ß°ü  brew install packageName¼´¿É
			Èç	brew install python3
		
			
			mac ×Ô´øµÄpreview»­Í¼¹¤¾ß,ËäÈ»²»Ì«»áÓÃ,µ«ÓĞ¸öÓÃ·¨ÊÇÒªÕÆÎÕµÄ
				¾ÍÊÇÑ¡ÖĞ ¹¤¾ßÏä-> ÈıÀâ¾µ È»ºóµ÷½ÚÕûÌåµÄÉ«µ÷
				
		
			Èç¹ûÒ»¸östateÀïÓĞ¶à¸öÖµ,³õÊ¼»¯Ê±ÓÃ','·Ö¸ô
			ÀıÈç
				route = {{ name:'Name', component:FirstPage }};
			
			Òª×÷Îªprops´«¸øÆäËûÒ³ÃæÊ±,ÓÃ{...route.params}À´´«µİ
			
			ÔÚ¶¨ÒåÀï,²ÎÊıÒªĞ´³Éµ±Ç°Ò³ÃæµÄ²ÎÊı
			ÀıÈç
			
			äÖÈ¾Ê±,½«navigatorÒ²×÷Îªprops´«ÁË¹ıÈ¥
			renderScene = { (route,navigator)=>
				let Component = route.component;
				<Component  {...route.params} navigator={navigator} />
			}
			
			
			
			Â·ÓÉ:Ò»¸öÂ·ÓÉÓÃÓÚÃèÊönavigatorÀïµÄÒ»¸ö¶ÔÏó
			
			navigator:ÊÇÒ»¸ö¶ÔÏó,¹©¸÷ÊÓÍ¼µ÷ÓÃ,±»×÷Îªprops´«¸ønavigatoräÖÈ¾µÄÈÎÒâ×é¼ş
			
			<Navigator
			    // ¶¨Òå³õÊ¼»¯routeÊ±µÄ²ÎÊı
				initRoute(){{
					name:'init',
					component:First,
				}}	
			
				// µ÷ÓÃrouteÀïµÄ²ÎÊı 
				renderScene{(route,navigator)=>{
					var component = route.component; // ÕâÀï»ñÈ¡µÄ¾ÍÊÇÔÚinitRouteÀï¶¨ÒåµÄ¼ücomponent¶ÔÓ¦µÄÖµ
					<component {...route.params} navigator = {navigator}  />  // ¿ÉÒÔÔÚinitRouteÀïÌí¼Óparams:{}ÒÔ´«µİ²ÎÊı,navigator¾ÍÊÇNavigator¶ÔÏó,Ã¿¸öÂ·ÓÉ¶¼¿ÉÒÔµ÷ÓÃ´ËNav
				}
			/>
			
			¶Ô±»µ÷½çÃæComponent

			const {navigator} = this.props;// ¿ÉÓÃ´Ë»ñÈ¡ÉÏÎÄÌá¼°µÄcomponentºÍroute.params
			

			// Èç¹ûÖ»ÊÇÎªÁËÕ¹Ê¾view
			
			step1:
			ËüÀàËÆviewControl
			ĞèÒª½¨RCTxxxManager.m
			ÔÚ.mÀï
			
			#import "RCTViewManager.h"

			@interface RCTviewManager : RCTViewManager
			@end

			@implementation RCTviewManager

			RCT_EXPORT_MODULE();

			-(UIView *)view
			{
			  // »ñÈ¡ĞèÒª¼ÓÔØµÄview
			  return [[[NSBundle mainBundle]loadNibNamed:@"demoView" owner:self options:nil]firstObject];
			}

			@end
			
			step2:
			ĞèÒª½¨µ¼³öµÄjs ÀıÈçdemoView.js
			var { requireNativeComponent } = require('react-native');
			
			// ¶¨ÒåÊä³ö,Ãû³ÆÊÇÖ®Ç°µÄ.mÈ¥µô´ÊÎ²µÄmanage
			modle.exports = requireNativeComponent( 'RCTview',null );
			
			
			step3:
				ÔÚjsÀïµ÷ÓÃ´Ë¿Ø¼ş
				import  RCTview from './demoView'
				
				<RCTview />
			
				
			#´ÓÔ­Éúµ½RNµÄÄ£¿éÓ³Éä¼¼Êõ#
				ĞèÒªµÄ¶«Î÷
					1 ÖªµÀÊÇÄÄ¸öÀàÌá¹©µÄÄÄ¸ö·½·¨,¾ßÌåµØ,JSµ÷native,ÒªÄ£¿éÃû,·½·¨Ãû,²ÎÊıÃû.Ò²¾ÍÊÇÌá¹©Ó³Éä±í
				
				¾ßÌåÊµÏÖ
					1  µ¼³ö×¢²áµÄÄ£¿é,Éú³ÉÊı¾İÀàModuleData,ÆäÖĞ°üº¬instanceºÍË÷ÒıID
					
				