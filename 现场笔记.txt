
			
		/* ??´ıÑéÖ¤ */	
	// 	react ±¾ÉíÈÚÈë JSµÄAPI£¬±ÈÈçXMLHttpRequest,navigator.geolocationµÈ
	var React = require('react-native');
	var { Text } = React;
		*Ö¸¶¨ÁËÈı¸ö¶ÔÏó
	var GeoInfo = React.createClass({
		getInitialState: function() {
		return { position: 'unknown' };
	},	
	
	componentDidMount: function() {
		navigator.geolocation.getCurrentPosition(
			(position) => this.setState({position}),
			(error) => console.error(error)
		);
	},
	
	render: function() {
	   return (
		  <Text>
			Position: {JSON.stringify(this.state.position)}
		  </Text>
		);
	   },
	});
	
	
	
	// react¿ÉÒÔÖØÓÃÔ­ÉúUI£¬·½·¨ÊÇÔÚRCTViewManagerµÄ×ÓÀàÀïÊµÏÖ-(UIView *)view¡£ĞèÒªµ÷ÓÃÊ±ÓÃRCT_EXPORT_VIEW_PROPERTY±©Â¶¡£
	/* ÑĞ¾¿ÖØµã */
	//  OC´úÂë
	#import "RCTViewManager.h"
	@interface MyCustomViewManager : RCTViewManager
	@end
	// µ÷ÓÃ´Ëview
	@implementation MyCustomViewManager
		- (UIView *)view
		{
			return [[MyCustomView alloc] init];
		}
		// ÏòJS±©Â¶ÊôĞÔ
		RCT_EXPORT_VIEW_PROPERTY(myCustomProperty);
	@end	
	
	// JS´úÂë
	// Éú³ÉÒ»¸öÄ£ĞÍ
	module.exports = createReactIOSNativeComponentClass({
		validAttributes: { myCustomProperty: true },
		uiViewClassName: 'MyCustomView',
	});

	
	ÔÚJSÀï,nav±»×ö³ÉÒ»¸öÈİÆ÷,¿ØÖÆÒ³ÃæµÄÑ¹Õ»ºÍµ¯³ö.µ¼º½ÌõµÄÑùÊ½ĞèÒª×ÔĞĞ´´½¨
		¶ÔnavigatorÀ´
			Ğ´¶¨ÒåµÄµØ·½,navigator¿Ø¼şÔÚ
				initialRoute·½·¨Àï,´æÁËµ±Ç°»î¶¯Ò³ÃæµÄRouteĞÅÏ¢,°üÀ¨nameºÍcomponent
				
				ÔÚrenderScene»Øµ÷Àï,
					renderScene={(route,navigatr)=>{¡­¡­¡­¡­¡­¡­}}ÀïµÄroute¾Í°üº¬ÕâÁ½¸öÖµ,¶ønavigator¾ÍÊÇµ¼º½À¸¶ÔÏó
				ÒªäÖÈ¾Ò³ÃæÊ±,ÓÃrouteÀïµÄ²ÎÊı,²¢½«navigatorÒ²´«¸øĞÂäÖÈ¾µÄÒ³Ãæ	
				
					let Component = route.component;
					<Component {...route.params} navigator={navigator} />
		
					
			ÔÚµ÷ÓÃÊ±,´ÓpropsÀï»ñÈ¡navigator,ÓÃ´ËnavÀ´push
				const {navigator} = this.props;
				if(navigator){
					navigator.push(
						name:'secondComponent',
						component:SecondComponent,
					)
				}

				