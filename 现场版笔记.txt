
	
	function todos(state=[],action){
	// 返回一个数组，数组里添加一个对象
	switch(action.type){
		case 'ADD_TODO':
			return [
			...state,{
			text:action.text,
			completed:false
			}];

		case 'COMPLETE_TODO':	
			return [
				...state.slice(0,action.index),
				Object.assign({}， state[action.index],{completed:true}),
				...state.slice(0,action.index + 1),
			];

		default:
			return state;	
	}}

	// 需要导入映射表Reducers和映射表对应的驱动store
	import { combineReducers, createStore  } from 'redux';	

	let reducer = combineReducers({visibilityFilter, todos });
	let store = createStore();


	function counter( state = 0, action ){
		switch(action.type){
			case 'INCREMENT':
				return state + 1;
			case 'DECREMENT':
				return state - 1;
			default:
				return state;


	props还有解构赋值的属性，


	在JS中注释块时，除了 /**/之外，还要用{}， // 同理，不过//对应的{}要分行

	react-native和react的差别在于前者用的是JSX语法，不能用html里的组件。只能用类似的组件，比如View对应css里的div, text对应css里的span

	
	受控组件，其显示需要通过自己的state来刷新
	比如
		picker

		通过其selectedValue驱动组件
		而selectedValue要绑定到 this.state.someVal
		this.state.someVal通过onValueChange的回调刷新

		



