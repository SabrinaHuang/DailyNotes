
	Action: 普通obj

	纯函数：不依赖环境状态，也不改变环境状态的函数


----------Action----------------
	store.dispatch({
		type: 'functionID',
		key1:value1,
		key12:value12,
		key13:value13,
		key14:value14,
		key15:value15,

	});


----------Reducers----------------
	// 参数值是为了给state默认值
	function  visibilityFilter( state = 'SHOW_ALL', action ){
	switch( action.type ){
		case 'functionID1':
			return action.filter;

		default:
			return state;

	}}





CDN是云存储系统，用于存放框架，供各网页使用
		比如google为jQuery框架提供了CDN服务

		开发时，用
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js">
		</script>

	// 返回的是整个state， ...state表示展开对象，暴露其中所有的值
	
	function todos(state=[],action){
	// 返回一个数组，数组里添加一个对象
	switch(action.type){
		case 'ADD_TODO':
			return [
			...state,{
			text:action.text,
			completed:false
			}];

		case 'COMPLETE_TODO':	
			return [
				...state.slice(0,action.index),
				Object.assign({}， state[action.index],{completed:true}),
				...state.slice(0,action.index + 1),
			];

		default:
			return state;	
	}}

	// 需要导入映射表Reducers和映射表对应的驱动store
	import { combineReducers, createStore  } from 'redux';	

	let reducer = combineReducers({visibilityFilter, todos });
	let store = createStore();


	function counter( state = 0, action ){
		switch(action.type){
			case 'INCREMENT':
				return state + 1;
			case 'DECREMENT':
				return state - 1;
			default:
				return state;
		}
	}



	-------------action-------------
	




	// 定义方法，描述改变state的方法
	-------------reducers-------------

	import {creatStore} from 'redux';

	function counter( state = 0, action ){
		switch(action.type){
			case 'INCREMENT':
				return state +1;

		}
	}


	-------------store-------------
	let store = createStore(counter);

	store.dispatch({type:'INCREMENT'});


------------------
	import {createStore} from 'redux';

	function counter( state=0, action ){

	}





		





